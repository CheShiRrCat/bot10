from main import dp
from aiogram import types
from utilities import *
from aiogram.dispatcher import FSMContext


@dp.callback_query_handler(lambda callback: callback.data.split()[0] == 'choice_branch')
async def create_request(callback: types.CallbackQuery, state: FSMContext):
    user = User.get_or_none(User.user_id == callback.from_user.id)
    if user.user_role == 'cashier':
        await callback.message.answer('üìù –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –ø—Ä–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –Ω–µ–ø–æ–ª–∞–¥–∫—É',
                                      reply_markup=cancel_inline())
        await state.set_state(Cashier.enter_text)
    elif user.user_role == 'admin':
        branch = Branch.get_by_id(int(callback.data.split()[1]))
        text = f'''{branch.name}
–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è üè¨ —Ñ–∏–ª–∏–∞–ª–∞ –Ω–∞–∂–º–∏—Ç–µ "–ò–∑–º–µ–Ω–∏—Ç—å"
–ß—Ç–æ–±—ã üóëÔ∏è —É–¥–∞–ª–∏—Ç—å —Ñ–∏–ª–∏–∞–ª - "–£–¥–∞–ª–∏—Ç—å"
‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ "–û—Ç–º–µ–Ω–∞" –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'''
        await callback.message.answer(text, reply_markup=branch_edit())
    await state.update_data(dict(branch=callback.data.split()[1]))
