from aiogram import types


def cashier_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üõ†Ô∏è –ü–æ–ª–æ–º–∫–∞', callback_data=f'repair_request'))
    kb.add(types.InlineKeyboardButton(text='üßæ –û–±—Ä–∞—â–µ–Ω–∏–µ', callback_data=f'appeal_request'))
    kb.add(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç–∏–µ/–ó–∞–∫—Ä—ã—Ç–∏–µ', callback_data=f'open_close'))
    return kb


def cashier_keyboard_repairs():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üõ†Ô∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'create_request'))
    kb.add(types.InlineKeyboardButton(text='üìã –ú–æ–∏ –∑–∞—è–≤–∫–∏', callback_data=f'show_requests'))
    kb.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'back'))
    return kb


def cashier_keyboard_appeals():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üßæ –û—Å—Ç–∞–≤–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ', callback_data=f'create_appeal'))
    kb.add(types.InlineKeyboardButton(text='üìã –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è', callback_data=f'show_appeals'))
    kb.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'back'))
    return kb


def adm_resp_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üõ†Ô∏è –ü–æ–ª–æ–º–∫–∏', callback_data=f'show_types_requests'))
    kb.add(types.InlineKeyboardButton(text='üßæ –û–±—Ä–∞—â–µ–Ω–∏—è', callback_data=f'show_types_appeals_requests'))
    kb.add(types.InlineKeyboardButton(text='üìã –ß–µ–∫-–ª–∏—Å—Ç—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', callback_data=f'show_checklists'))
    return kb


def appeal_responsible_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üßæ –û–±—Ä–∞—â–µ–Ω–∏—è', callback_data=f'show_types_appeals_requests'))
    kb.add(types.InlineKeyboardButton(text='üìã –ß–µ–∫-–ª–∏—Å—Ç—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', callback_data=f'show_checklists'))
    return kb


def break_responsible_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üõ†Ô∏è –ü–æ–ª–æ–º–∫–∏', callback_data=f'show_types_requests'))
    kb.add(types.InlineKeyboardButton(text='üìã –ß–µ–∫-–ª–∏—Å—Ç—ã –ª–∏–Ω–µ–π–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞', callback_data=f'show_checklists'))
    return kb


def responsible_requests_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', callback_data=f'show_requests 0'))
    kb.add(types.InlineKeyboardButton(text='üîß –í —Ä–∞–±–æ—Ç–µ', callback_data=f'show_requests 1'))
    kb.add(types.InlineKeyboardButton(text='‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', callback_data=f'show_requests 2'))
    return kb


def responsible_appeal_requests_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚è≥ –ù–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏', callback_data=f'show_appeals 0'))
    kb.add(types.InlineKeyboardButton(text='üîß –í —Ä–∞–±–æ—Ç–µ', callback_data=f'show_appeals 1'))
    kb.add(types.InlineKeyboardButton(text='‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ', callback_data=f'show_appeals 2'))
    return kb


def resp_clerk_kb():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üìë –ß–µ–∫-–ª–∏—Å—Ç—ã', callback_data=f'edit_checklists'))
    return kb


def resp_checklists_kb(dates, callback):
    kb = types.InlineKeyboardMarkup()
    for i in dates:
        kb.add(types.InlineKeyboardButton(text=i, callback_data=f'{callback} {i}'))
    return kb


def clerk_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üéØ –ú–æ–∏ –∑–∞–¥–∞—á–∏', callback_data=f'my_tasks'))
    return kb


def clerk_task_kb(task_id):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚úÖ –í—ã–ø–æ–ª–Ω–∏—Ç—å', callback_data=f'task_complete {task_id}'))
    return kb


def admin_keyboard():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üõ†Ô∏è –ó–∞—è–≤–∫–∏', callback_data=f'adm_requests'))
    kb.add(types.InlineKeyboardButton(text='üè¨ –§–∏–ª–∏–∞–ª—ã', callback_data=f'edit_branches'))
    kb.add(types.InlineKeyboardButton(text='üßæ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data=f'edit_categories'))
    kb.add(types.InlineKeyboardButton(text='üîë –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞', callback_data=f'edit_roles'))
    kb.add(types.InlineKeyboardButton(text='üìë –ß–µ–∫-–ª–∏—Å—Ç—ã', callback_data=f'edit_checklists'))
    return kb


def branch_edit():
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'edit_branch'),
           types.InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_branch'))
    kb.row(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç–∏–µ', callback_data='checklist_branch 0'),
           types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç–∏–µ', callback_data='checklist_branch 1'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def category_edit():
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'edit_category'),
           types.InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_category'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def category_edit_type():
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è', callback_data=f'change_category_name'),
           types.InlineKeyboardButton(text='üë§ –ò–∑–º–µ–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ', callback_data=f'change_category_responsible'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def edit_roles_kb():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='–õ–∏–Ω–µ–π–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª', callback_data='cashier'))
    kb.add(types.InlineKeyboardButton(text='–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π', callback_data='responsible'))
    kb.add(types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –ø–æ–ª–æ–º–∫–∏', callback_data='responsible_break'))
    kb.add(types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è', callback_data='responsible_appeal'))
    # kb.add(types.InlineKeyboardButton(text='–ö–ª–µ—Ä–∫', callback_data='clerk'))
    # kb.add(types.InlineKeyboardButton(text='–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–ª–µ—Ä–∫', callback_data='resp_clerk'))
    kb.add(types.InlineKeyboardButton(text='–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', callback_data='admin'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def edit_checklists_kb(users, callback):
    kb = types.InlineKeyboardMarkup()
    for i in users:
        kb.add(types.InlineKeyboardButton(text=i.username, callback_data=f'{callback} {i.user_id}'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def add_task_and_back(callback):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'add_task'))
    kb.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=callback))
    return kb


def edit_task_kb(task_id):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'add_task {task_id}'))
    kb.add(types.InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_task {task_id}'))
    return kb


def branches_keyboard(branches, callback, user_role='cashier'):
    kb = types.InlineKeyboardMarkup()
    print(callback)
    for i in branches:
        kb.add(types.InlineKeyboardButton(text=i.name, callback_data=f'{callback} {i.id}'))
    if user_role == 'admin' and callback == 'choice_branch':
        kb.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data='edit_branch'))
    kb.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'back'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def categories_keyboard(categories, callback, user_role='cashier'):
    kb = types.InlineKeyboardMarkup()
    for i in categories:
        kb.add(types.InlineKeyboardButton(text=i.name, callback_data=f'{callback} {i.id}'))
    if user_role == 'admin' and callback == 'choice_category':
        kb.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data='edit_category'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def open_close_kb(callback):
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç–∏–µ', callback_data=f'{callback} False'),
           types.InlineKeyboardButton(text='–ó–∞–∫—Ä—ã—Ç–∏–µ', callback_data=f'{callback} True'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def branch_tasks_kb(tasks, callback, user_role='cashier'):
    kb = types.InlineKeyboardMarkup()
    for i in tasks:
        symbol = '‚úÖ' if i.status else '‚ùå'
        kb.add(types.InlineKeyboardButton(text=symbol + ' ' + i.checklist_id.name, callback_data=f'{callback} {i.id}'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def checklists_branch_kb(checklists, is_close):
    kb = types.InlineKeyboardMarkup()
    for i in checklists:
        kb.add(types.InlineKeyboardButton(text=i.name, callback_data=f'choice_checklist {i.id}'))
    kb.add(types.InlineKeyboardButton(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å', callback_data=f'add_checklist {is_close}'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def edit_checklist_kb(checklist_id):
    kb = types.InlineKeyboardMarkup()
    kb.row(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data=f'change_checklist {checklist_id}'),
           types.InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_checklist {checklist_id}'))
    kb.add(types.InlineKeyboardButton(text='–§–æ—Ç–æ', callback_data=f'photo_checklist {checklist_id}'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def cancel_inline():
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data=f'back'))
    kb.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel'))
    return kb


def back_inline(callback):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data=callback))
    return kb


def request_keyboard(request, role=None, user_id=None, status=None):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üì∏ –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–¥–∏–∞', callback_data=f'show_media_request {request}'))
    if role == 'responsible_break' or role == 'responsible_appeal' or role == 'responsible' or role == 'admin':
        text, callback = '', ''
        if status == 0 or status == 2:
            text, callback = 'üîß –í —Ä–∞–±–æ—Ç—É', f'req_change_status {request} 1'
        elif status == 1:
            text, callback = '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω', f'req_change_status {request} 2'
        kb.row(types.InlineKeyboardButton(text=text, callback_data=callback),
               types.InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete {request}'))
        kb.add(types.InlineKeyboardButton(text='ü§µ –ù–∞–ø–∏—Å–∞—Ç—å', url=f'tg://user?id={user_id}'))
    return kb


def appeal_request_keyboard(request, role=None, user_id=None, status=None):
    kb = types.InlineKeyboardMarkup()
    kb.add(types.InlineKeyboardButton(text='üì∏ –ü—Ä–æ—Å–º–æ—Ç—Ä –º–µ–¥–∏–∞', callback_data=f'show_media_appeal_request {request}'))
    if role == 'responsible_break' or role == 'responsible_appeal' or role == 'responsible' or role == 'admin':
        text, callback = '', ''
        if status == 0 or status == 2:
            text, callback = 'üîß –í —Ä–∞–±–æ—Ç—É', f'req_appeal_change_status {request} 1'
        elif status == 1:
            text, callback = '‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω', f'req_appeal_change_status {request} 2'
        kb.row(types.InlineKeyboardButton(text=text, callback_data=callback),
               types.InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'delete_appeal {request}'))
        kb.add(types.InlineKeyboardButton(text='ü§µ –ù–∞–ø–∏—Å–∞—Ç—å', url=f'tg://user?id={user_id}'))
    return kb


def next_step():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb.add('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å')
    kb.add('‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    return kb


def delete_kb():
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    kb.add('–£–¥–∞–ª–∏—Ç—å')
    return kb